[{"/Users/oscy/Documents/ZUMA/zumadash/src/pages/_app.js":"1","/Users/oscy/Documents/ZUMA/zumadash/src/pages/_document.js":"2","/Users/oscy/Documents/ZUMA/zumadash/src/pages/index.js":"3","/Users/oscy/Documents/ZUMA/zumadash/src/pages/api/auth/[...nextauth].js":"4","/Users/oscy/Documents/ZUMA/zumadash/src/components/dashboard/index.js":"5","/Users/oscy/Documents/ZUMA/zumadash/src/components/dashboard/pages/dashboard/main.js":"6","/Users/oscy/Documents/ZUMA/zumadash/src/components/dashboard/pages/employee/main.js":"7","/Users/oscy/Documents/ZUMA/zumadash/src/components/dashboard/pages/inventory/main.js":"8","/Users/oscy/Documents/ZUMA/zumadash/src/components/login/login.js":"9","/Users/oscy/Documents/ZUMA/zumadash/src/pages/employee.js":"10","/Users/oscy/Documents/ZUMA/zumadash/src/pages/signin.js":"11"},{"size":283,"mtime":1681780815481,"results":"12","hashOfConfig":"13"},{"size":231,"mtime":1681009891025,"results":"14","hashOfConfig":"13"},{"size":430,"mtime":1682553905973,"results":"15","hashOfConfig":"13"},{"size":2539,"mtime":1683002394127,"results":"16","hashOfConfig":"13"},{"size":10202,"mtime":1683001294351,"results":"17","hashOfConfig":"13"},{"size":2949,"mtime":1683001396873,"results":"18","hashOfConfig":"13"},{"size":21549,"mtime":1683002278230,"results":"19","hashOfConfig":"13"},{"size":3096,"mtime":1683001405909,"results":"20","hashOfConfig":"13"},{"size":929,"mtime":1682994081000,"results":"21","hashOfConfig":"13"},{"size":69,"mtime":1682475738024,"results":"22","hashOfConfig":"13"},{"size":4135,"mtime":1682999522606,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9ssnrj",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/oscy/Documents/ZUMA/zumadash/src/pages/_app.js",[],[],"/Users/oscy/Documents/ZUMA/zumadash/src/pages/_document.js",[],[],"/Users/oscy/Documents/ZUMA/zumadash/src/pages/index.js",[],[],"/Users/oscy/Documents/ZUMA/zumadash/src/pages/api/auth/[...nextauth].js",[],[],"/Users/oscy/Documents/ZUMA/zumadash/src/components/dashboard/index.js",["58","59"],[],"\nimport { Fragment, useState } from 'react'\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { Bars3Icon, BellIcon, XMarkIcon } from '@heroicons/react/24/outline'\nimport { signOut, useSession } from 'next-auth/react'\nimport Employee from './pages/employee/main';\nimport Inventory from './pages/inventory/main';\nimport Dashboard from './pages/dashboard/main';\n\nconst userNavigation = [\n  { name: 'Your Profile', href: '#' },\n  { name: 'Settings', href: '#' },\n  { name: 'Sign out', href: '#' },\n]\n\n\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\n\nexport default function Index(props) {\n  \n\n  const [navigation, setNavigation] = useState([\n    { name: 'Dashboard', href: '#', current: true, component: <Dashboard/>},\n    { name: 'Employees',href: '#',current: false, component: <Employee/> },\n    { name: 'Inventory', href: '#', current: false, component: <Inventory/>},\n  ])\n\n  const [currentView, setView] = useState({ name: 'Dashboard', href: '#', current: true, component: <Dashboard/>})\n\n  const renderComponent = () => {\n    \n    return currentView.component;\n  }\n\n  const renderTitle = () => {\n    return currentView.name;\n  }\n\n  function handle_nav_change(item){\n    const newNav = navigation.map((obj,index) => {\n      if (obj.name == item.name) {\n        setView(obj);\n        return {...obj, current: true}\n      } else {\n        \n        return {...obj, current: false}\n      }\n    });\n    setNavigation(newNav);\n  };\n\n  const { data: session, status } = useSession();\n  const user = {\n    name: session.user_json_data[0].NAME,\n    email: session.user_json_data[0].EMAIL,\n    imageUrl: session.user_json_data[0].IMG_URL\n  }\n  return (\n    <>\n      {/*\n        This example requires updating your template:\n\n        ```\n        <html class=\"h-full bg-gray-100\">\n        <body class=\"h-full\">\n        ```\n      */}\n      <div className=\"min-h-full\">\n        <Disclosure as=\"nav\" className=\"bg-zuma-green\">\n          {({ open }) => (\n            <>\n              <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n                <div className=\"flex h-16 items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <div className=\"flex-shrink-0\">\n                      <div\n                        className=\"text-4xl text-zuma-login font-medium\"\n                      >ZUMA</div>\n                    </div>\n                    <div className=\"hidden md:block\">\n                      <div className=\"ml-10 flex items-baseline space-x-4\">\n                        {navigation.map((item) => (\n                          <button\n                            key={item.name}\n                            href={item.href}\n                            onClick={()=>handle_nav_change(item)}\n                            className={classNames(\n                              item.current\n                                ? 'bg-gray-900 text-white'\n                                : 'text-black/70 hover:bg-gray-700 hover:text-white',\n                              'rounded-md px-3 py-2 text-sm font-medium'\n                            )}\n                            aria-current={item.current ? 'page' : undefined}\n                          >\n                            {item.name}\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"hidden md:block\">\n                    <div className=\"ml-4 flex items-center md:ml-6\">\n                      <button\n                        type=\"button\"\n                        className=\"rounded-full bg-gray-800 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\"\n                      >\n                        <span className=\"sr-only\">View notifications</span>\n                        <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                      </button>\n\n                      {/* Profile dropdown */}\n                      <Menu as=\"div\" className=\"relative ml-3\">\n                        <div>\n                          <Menu.Button className=\"flex max-w-xs items-center rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\">\n                            <span className=\"sr-only\">Open user menu</span>\n                            <img className=\"h-12 w-12 rounded-full \" src={user.imageUrl} alt=\"\" />\n                          </Menu.Button>\n                        </div>\n                        <Transition\n                          as={Fragment}\n                          enter=\"transition ease-out duration-100\"\n                          enterFrom=\"transform opacity-0 scale-95\"\n                          enterTo=\"transform opacity-100 scale-100\"\n                          leave=\"transition ease-in duration-75\"\n                          leaveFrom=\"transform opacity-100 scale-100\"\n                          leaveTo=\"transform opacity-0 scale-95\"\n                        >\n                          <Menu.Items className=\"absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                            {userNavigation.map((item) => (\n                              <Menu.Item key={item.name}>\n                                {({ active }) => (\n                                  <a\n                                    href={item.href}\n                                    onClick={item.name == \"Sign out\" ? ()=> signOut({redirect: true, path: '/'}) : null}\n                                    className={classNames(\n                                      active ? 'bg-gray-100' : '',\n                                      'block px-4 py-2 text-sm text-gray-700'\n                                    )}\n                                  >\n                                    {item.name}\n                                  </a>\n                                )}\n                              </Menu.Item>\n                            ))}\n                          </Menu.Items>\n                        </Transition>\n                      </Menu>\n                    </div>\n                  </div>\n                  <div className=\"-mr-2 flex md:hidden\">\n                    {/* Mobile menu button */}\n                    <Disclosure.Button className=\"inline-flex items-center justify-center rounded-md bg-gray-800 p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\">\n                      <span className=\"sr-only\">Open main menu</span>\n                      {open ? (\n                        <XMarkIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                      ) : (\n                        <Bars3Icon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                      )}\n                    </Disclosure.Button>\n                  </div>\n                </div>\n              </div>\n\n              <Disclosure.Panel className=\"md:hidden\">\n                <div className=\"space-y-1 px-2 pb-3 pt-2 sm:px-3\">\n                  {navigation.map((item) => (\n                    <Disclosure.Button\n                      key={item.name}\n                      as=\"a\"\n                      href={item.href}\n                      className={classNames(\n                        item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                        'block rounded-md px-3 py-2 text-base font-medium'\n                      )}\n                      aria-current={item.current ? 'page' : undefined}\n                    >\n                      {item.name}\n                    </Disclosure.Button>\n                  ))}\n                </div>\n                <div className=\"border-t border-gray-700 pb-3 pt-4\">\n                  <div className=\"flex items-center px-5\">\n                    <div className=\"flex-shrink-0\">\n                      <img className=\"h-10 w-10 rounded-full\" src={user.imageUrl} alt=\"\" />\n                    </div>\n                    <div className=\"ml-3\">\n                      <div className=\"text-base font-medium leading-none text-white\">{user.name}</div>\n                      <div className=\"text-sm font-medium leading-none text-gray-400\">{user.email}</div>\n                    </div>\n                    <button\n                      type=\"button\"\n                      className=\"ml-auto flex-shrink-0 rounded-full bg-gray-800 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\"\n                    >\n                      <span className=\"sr-only\">View notifications</span>\n                      <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                  <div className=\"mt-3 space-y-1 px-2\">\n                    {userNavigation.map((item) => (\n                      <Disclosure.Button\n                        key={item.name}\n                        as=\"a\"\n                        href={item.href}\n                        className=\"block rounded-md px-3 py-2 text-base font-medium text-gray-400 hover:bg-gray-700 hover:text-white\"\n                      >\n                        {item.name}\n                      </Disclosure.Button>\n                    ))}\n                  </div>\n                </div>\n              </Disclosure.Panel>\n            </>\n          )}\n        </Disclosure>\n\n        <header className=\"bg-white shadow\">\n          <div className=\"mx-auto max-w-7xl px-4 py-6 sm:px-6 lg:px-8\">\n            <h1 className=\"text-3xl font-bold tracking-tight text-gray-900\">{renderTitle()}</h1>\n          </div>\n        </header>\n        <main>\n          <div className=\"mx-auto max-w-7xl py-6 sm:px-6 lg:px-8 bg-black\">\n          <div className='text-black'>{session.user_json_data[0].IMG_URL}</div>\n            <div>{renderComponent()}</div>\n            \n            {/* Your content */}</div>\n        </main>\n      </div>\n\n    </>\n  )\n}","/Users/oscy/Documents/ZUMA/zumadash/src/components/dashboard/pages/dashboard/main.js",[],[],"/Users/oscy/Documents/ZUMA/zumadash/src/components/dashboard/pages/employee/main.js",["60","61"],[],"/Users/oscy/Documents/ZUMA/zumadash/src/components/dashboard/pages/inventory/main.js",[],[],"/Users/oscy/Documents/ZUMA/zumadash/src/components/login/login.js",[],[],"/Users/oscy/Documents/ZUMA/zumadash/src/pages/employee.js",[],[],"/Users/oscy/Documents/ZUMA/zumadash/src/pages/signin.js",[],[],{"ruleId":"62","severity":1,"message":"63","line":120,"column":29,"nodeType":"64","endLine":120,"endColumn":99},{"ruleId":"62","severity":1,"message":"63","line":188,"column":23,"nodeType":"64","endLine":188,"endColumn":92},{"ruleId":"65","severity":1,"message":"66","line":400,"column":3,"nodeType":"67","endLine":400,"endColumn":8,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":411,"column":3,"nodeType":"67","endLine":411,"endColumn":13,"suggestions":"70"},"@next/next/no-img-element","Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'EmpDataA'. Either include it or remove the dependency array.","ArrayExpression",["71"],"React Hook useEffect has a missing dependency: 'employeeData'. Either include it or remove the dependency array.",["72"],{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [EmpDataA, emp]",{"range":"77","text":"78"},"Update the dependencies array to be: [employee, employeeData]",{"range":"79","text":"80"},[12169,12174],"[EmpDataA, emp]",[12389,12399],"[employee, employeeData]"]